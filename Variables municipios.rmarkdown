title: "Untitled"

format: html

editor: visual

```{r}

library(tidyverse)

library(readxl)

library(haven)

```

## Municipios: Base de datos inicial

```{r}



microdatos2011 <- read_sav("Microdatos2011/Personas/poblacion_2011_v2.sav")



municipios <- microdatos2011 |> 

  select(CPRO, CMUN)



# Crear los códigos cusec de los municipios no especificados

cusec_991 <- sprintf("%05d", seq(1991, 52991, by = 1000))

cusec_992 <- sprintf("%05d", seq(1992, 52992, by = 1000))

cusec_993 <- sprintf("%05d", seq(1993, 52993, by = 1000))

cusec_994 <- sprintf("%05d", seq(1994, 52994, by = 1000))

cusec <- c(cusec_991, cusec_992, cusec_993, cusec_994)



MUN_LITERAL <- 

  ifelse(substr(cusec, 4, 5) == "91","<=2000",

  ifelse(substr(cusec, 4, 5) == "92", "2001 <= 5000",

  ifelse(substr(cusec, 4, 5) == "93", "5001 <= 10000",

  ifelse(substr(cusec, 4, 5) == "94", "10001 <= 20000","Otros"))))



df_rural <- data.frame(MUN_LITERAL, cusec)



# Obtener nombres de todos los municipios y provincias

locations <- read_excel("vivienda turística/exp_viv_turistica_tabla5_FEB2021.xlsx", sheet = 3, na = "Dato protegido por secreto estadístico.")



nombres_municipios <- locations |> 

  select(MUN_LITERAL, MUN) |> 

  rename(cusec = MUN) |> 

  distinct(cusec, .keep_all = TRUE)



nombres_provincias <- locations |> 

  select(PROV_LITERAL, PROV) |> 

  rename(CPRO = PROV) |> 

  distinct(CPRO, .keep_all = TRUE)



nombres_municipios <- rbind(nombres_municipios, df_rural)



ccaas <- data.frame(

  CodigoProvincia = c("01", "02", "03", "04", "33", "05", "06", "08", "09", "10", "11", "39", "12", "13", "14", "16", "17", "18", "19", "20", "21", "22", "23", "07", "24", "15", "35", "25", "26", "27", "28", "29", "30", "31", "32", "34", "36", "37",

"38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52"),

  

  CCAA = c("País Vasco", "Castilla-La Mancha", "Comunidad Valenciana", "Andalucía", "Asturias", "Castilla y León", "Extremadura", "Cataluña", "Castilla y León", "Extremadura", "Andalucía", "Cantabria", "Comunidad Valenciana", "Castilla-La Mancha", "Andalucía", "Castilla-La Mancha", "Cataluña", "Andalucía", "Castilla-La Mancha", "País Vasco", "Andalucía", "Aragón", "Andalucía", "Islas Baleares", "Castilla y León", "Galicia", "Canarias", "Cataluña", "La Rioja", "Galicia", "Comunidad de Madrid", "Andalucía", "Comunidad de Murcia", "Comunidad Foral de Navarra", "Galicia", "Castilla y León", "Galicia", "Castilla y León", "Canarias", "Cantabria", "Castilla y León", "Andalucía", "Castilla y León", "Cataluña", "Aragón", "Castilla-La Mancha", "Comunidad Valenciana", "Castilla y León", "País Vasco", "Castilla y León", "Aragón", "Ceuta", "Melilla"))

  

# Añadir nombres de provincias y municipios

municipios <- municipios |> 

  mutate(

    CMUN = str_pad(CMUN, width = 3, side = "left", pad = "0"),

    CPRO = str_pad(CPRO, width = 2, side = "left", pad = "0")) |> 

   mutate(  

    CPRO = trimws(CPRO),

    CMUN = trimws(CMUN),

    cusec = paste0(CPRO, CMUN)) |> 

  

  left_join(nombres_municipios, by = "cusec") |> 

  left_join(nombres_provincias, by = "CPRO") |> 

  left_join(ccaas, by = c("CPRO" = "CodigoProvincia")) |> 



  distinct(cusec, .keep_all = T)





```

## Variables de los municipios

De cara al análisis de componentes o clusters de los municipios, preparo una tabla con distintas variables para caracterizarlos. Las limitaciones son que para el análisis con todas las variables, no cuento con los municipios menores a 20.000 habitantes. Para estos municipios rurales solo puedo usar las primeras 3 variables que pongo aquí.

-   Porcentaje de población según nacionalidad.

-   Porcentaje de jóvenes que residen en propiedad/alquiler/otro.

-   Diferencia del porcentaje de jóvenes por régimen de tenencia entre 2011 y 2021.

-   Porcentaje de vivienda turística.

-   Índice de Precios de Vivienda en Alquiler en 2011 y en 2021.

-   Índice de Precios de Vivienda (CCAA)

-   Renta por municipio

-   Porcentaje de población joven

-   Municipio rural o urbano

-   Porcentaje de viviendas vacías

-   Porcentaje de viviendas secundarias

### Índice de Precios de Vivienda en Alquiler

A nivel de municipio.

```{r}



ipva <- read_excel("Índice precios alquiler/59060.xls")



# Ajustar los cusec de 'Resto PROViNCIA'

ipva <- ipva |> 

  mutate(cusec = if_else(str_detect(cusec, "^Resto"), str_replace(lag(cusec), "\\d{2}$", "99"), cusec))  



# Limpiar tabla

ipva <- ipva |> 

  mutate(MUN_LITERAL = substr(cusec, 7, nchar(cusec)), 

         cusec = substr(cusec, 1, 5)) |> 

  rename(ipva2021 = "2021", ipva2011 = "2011") |> 

  select(-MUN_LITERAL)





municipios <- municipios |> 

  left_join(ipva, by = "cusec") |> 

  distinct(cusec, .keep_all=T)



```

### Índice de Precios de Vivienda

A nivel de CCAA.

```{r}



ipv <- read_xlsx("Índice precios vivienda/ipv.xlsx") |> 

  rename(ipv2021 = "2021T2", ipv2011 = "2011T2", tipoipv=Tipo)



municipios <- municipios |> 

  left_join(ipv, by = "CCAA") |> 

  select(-ccaa) |> 

  distinct(cusec, .keep_all = T)



```

### Renta por municipios

Obtengo los datos de la web de Agencia Tributaria, lo guardo en un .csv y lo limpio a partir de ahí.

```{r, echo=FALSE}



#library(rvest)



#html_data <- read_html("https://sede.agenciatributaria.gob.es/AEAT/Contenidos_Comunes/La_Agencia_Tributaria/Estadisticas/Publicaciones/sites/irpfmunicipios/2021/jrubik90ae83991146960352dc69bb31fd1601593c7eb.html")



# Extraer los datos de la tabla utilizando el XPath

#tabla_data <- html_data %>%

#  html_nodes(xpath = "/html/body/div[1]/div[5]") %>%

#  html_table()



# Seleccionar tibble

#tabla_data <- tabla_data[[1]]



# Guardar archivo .csv

#library(writexl)



#write_xlsx(tabla_data, "rentamunicipios.xlsx")



```

```{r}



suppressWarnings({

renta <- read_xlsx("Renta por municipios/rentamunicipios.xlsx")

})



renta <- renta |> 

  rename(MUN_LITERAL =...1) |> 

  select(MUN_LITERAL, `RENTA DISPONIBLEMEDIANA`) |> 

  mutate(cusec = as.character(gsub("[^0-9]", "", MUN_LITERAL)),

         MUN_LITERAL = gsub("[0-9-]", "", MUN_LITERAL),

         `RENTA DISPONIBLEMEDIANA` = gsub("\\.", "", `RENTA DISPONIBLEMEDIANA`)) |> 

  filter(nchar(cusec) >= 2) |> 

  select(-MUN_LITERAL) |> 

  rename(RentaMediana2021 = `RENTA DISPONIBLEMEDIANA`) |> 

  mutate(RentaMediana2021 = as.numeric(RentaMediana2021)) |> 

  mutate(RentaMediana2021 = str_pad(RentaMediana2021, width = 5, side = "right", pad = "0")) |> 

  mutate(RentaMediana2021 = as.numeric(RentaMediana2021)) |> 

  filter(nchar(cusec) == 5)



municipios <- municipios |> 

  left_join(renta, by = "cusec") |> 

  distinct(cusec, .keep_all=T)



```

### Proporción de población joven

Menor de 35 años. Los microdatos son una muestra del 10%, con lo cual no tendré los datos exactos de población (o podría estimarlos multiplicando por 10).

```{r}



load("Microdatos2021/Personas/R/CensoPersonas_2021.RData")



microdatos2021 <- Microdatos



poblacion2021 <- microdatos2021 |> 

  select(CPRO, CMUN, VAREDAD) |> 

  mutate(CPRO = trimws(CPRO), CMUN = trimws(CMUN), cusec = paste0(CPRO, CMUN)) |> 

  group_by(cusec) |> 

  mutate(Población2021 = n()) |> 

  ungroup()



poblacion2021 <-  poblacion2021 |> 

  filter(VAREDAD >= 0 & VAREDAD <= 35) |>  

  group_by(cusec) |> 

  mutate(PoblaciónJoven2021 = n()) |> 

  mutate(PorcentajeJoven2021 = round((PoblaciónJoven2021 / Población2021) * 100, 2)) |> 

  distinct(cusec, .keep_all = TRUE) |> 

  select(cusec, PorcentajeJoven2021)    





poblacion2011 <- microdatos2011 |> 

  select(CPRO, CMUN, EDAD) |> 

  mutate(

    CMUN = str_pad(CMUN, width = 3, side = "left", pad = "0"),

    CPRO = str_pad(CPRO, width = 2, side = "left", pad = "0")) |>

   mutate(

    CPRO = trimws(CPRO),

    CMUN = trimws(CMUN),

    cusec = paste0(CPRO, CMUN)) |> 

  group_by(cusec) |> 

  mutate(Población2011 = n()) |> 

  ungroup()



poblacion2011 <-  poblacion2011 |> 

  filter(EDAD >= 0 & EDAD <= 35) |> 

  group_by(cusec) |> 

  mutate(PoblaciónJoven2011 = n()) |> 

  mutate(PorcentajeJoven2011 = round((PoblaciónJoven2011 / Población2011) * 100, 2)) |> 

  distinct(cusec, .keep_all = TRUE) |> 

  select(cusec, PorcentajeJoven2011)    



municipios <- municipios |> 

  left_join(poblacion2021, by = "cusec") |> 

  distinct(cusec, .keep_all=T)



municipios <- municipios |> 

  left_join(poblacion2011, by = "cusec") |> 

  distinct(cusec, .keep_all=T)



```

### Rural o urbano

Realmente esto solo mide la población de más o menos 20000 habitantes. Pero he visto que hasta en en un informe llamado DEMOGRAFÍA DE LA POBLACIÓN RURAL del Ministerio, "la cual

clasifica un municipio como rural si tiene menos de 30.000 habitantes y menos de 100 habitantes por km2". Aquí voy a usar 20.000 habitantes y no veré la densidad de población.

En principio, calcularlo del 2011 está bien porque en 2011 hay menos municipios porque también 'censura' los de 10k a 20k habitantes.

```{r}



habitat <- microdatos2011 |>

  mutate(

    CMUN = str_pad(CMUN, width = 3, side = "left", pad = "0"),

    CPRO = str_pad(CPRO, width = 2, side = "left", pad = "0")) |>

   mutate(

    CPRO = trimws(CPRO),

    CMUN = trimws(CMUN),

    cusec = paste0(CPRO, CMUN)) |> 

   mutate(

     HABITAT = case_when(

       CMUN %in% c(991, 992, 993, 994) ~ "Rural",

       TRUE ~ "Urbano")) |> 

  select(HABITAT, cusec) |> 

  distinct(cusec, .keep_all = T)



municipios <- municipios |> 

  left_join(habitat, by = "cusec") |> 

  distinct(cusec, .keep_all=T)



```

### Viviendas vacías

En los microdatos del 2011 es muy claro, porque se clasifican como tal. En 2021 sólo hay viviendas no principales. Ésto sale de una tabla prefabricada del INE <https://www.ine.es/jaxi/Tabla.htm?tpx=59531&L=0>

No salen en 2021 los 991, 992. Salen los municipios enteros. Tengo que elegir o sacrificar los municipios rurales o ponerles 991, 992, 993... a los municipios que lo sean, uno a uno.

```{r}



vacias2021 <- read_xlsx("Vacias/vacias2021.xlsx")



vacias2021 <- vacias2021 |> 

  mutate(

    cusec = as.character(substring(MUN_LITERAL, 1, 5)), 

    MUN_LITERAL = gsub("\\d+\\s", "", MUN_LITERAL)) |> 

    mutate(PorcentajeVacias2021 = round((`Viviendas vacías` / `Viviendas totales`) * 100, 2)) |> 

  select(cusec, PorcentajeVacias2021)



# 2011

viviendas2011 <- read_sav("Microdatos2011/Viviendas/viviendas_2011_v1.sav")



vacias2011 <- viviendas2011 |> 

  select(CPRO, CMUN, CVIVIF) |> 

  mutate(

    CMUN = str_pad(CMUN, width = 3, side = "left", pad = "0"),

    CPRO = str_pad(CPRO, width = 2, side = "left", pad = "0")) |>

   mutate(  

    CPRO = trimws(CPRO),

    CMUN = trimws(CMUN),

    cusec = paste0(CPRO, CMUN)) |> 

  group_by(cusec) |> 

  mutate(ViviendasTotales = n()) |> 

  filter(CVIVIF == 3) |>

  mutate(ViviendasVacias2011 = n()) |> 

  mutate(PorcentajeVacias2011 = round((ViviendasVacias2011 / ViviendasTotales) * 100, 2)) |> 

  select(cusec, PorcentajeVacias2011) |> 

  distinct(cusec, .keep_all = T)



municipios <- municipios |> 

  left_join(vacias2011, by = "cusec") |> 

  distinct(cusec, .keep_all=T) |> 

  left_join(vacias2021, by = "cusec") |> 

  distinct(cusec, .keep_all=T)



```

### Viviendas secundarias

```{r}



viviendas2021 <- load("Microdatos2021/Viviendas/R/CensoViviendas_2021.RData")



viviendas2021 <- Microdatos



secundarias2021 <- viviendas2021 |> 

    select(CPRO, CMUN, TIPO_VIV) |> 

   mutate(  

    CPRO = trimws(CPRO),

    CMUN = trimws(CMUN),

    cusec = paste0(CPRO, CMUN)) |> 

  group_by(cusec) |> 

  mutate(ViviendasTotales = n()) |>

  filter(TIPO_VIV == 0) |> 

  mutate(ViviendasSecundarias2021 = n()) |>

    mutate(PorcentajeSecundarias2021 = round((ViviendasSecundarias2021 / ViviendasTotales) * 100, 2)) |>

  select(cusec, PorcentajeSecundarias2021) |> 

  distinct(cusec, .keep_all = T) 



secundarias2011 <- viviendas2011 |> 

  select(CPRO, CMUN, CVIVIF) |> 

  mutate(

    CMUN = str_pad(CMUN, width = 3, side = "left", pad = "0"),

    CPRO = str_pad(CPRO, width = 2, side = "left", pad = "0")) |>

     mutate(  

    CPRO = trimws(CPRO),

    CMUN = trimws(CMUN),

    cusec = paste0(CPRO, CMUN)) |> 

  group_by(cusec) |> 

  mutate(ViviendasTotales = n()) |>

  filter(CVIVIF == 2) |>

  mutate(ViviendasSecundarias2011 = n()) |>

    mutate(PorcentajeSecundarias2011 = round((ViviendasSecundarias2011 / ViviendasTotales) * 100, 2)) |>

  select(cusec, PorcentajeSecundarias2011) |> 

  distinct(cusec, .keep_all = T)



municipios <- municipios |> 

  left_join(secundarias2011, by = "cusec") |> 

  distinct(cusec, .keep_all=T) |> 

  left_join(secundarias2021, by = "cusec") |> 

  distinct(cusec, .keep_all=T)



```

### Viviendas turísticas 2021

```{r}



turismo <- read_excel("vivienda turística/exp_viv_turistica_tabla5_FEB2021.xlsx", sheet = 3, na = "Dato protegido por secreto estadístico.")



turismo <- turismo |> 

  rename(CPRO = PROV, cusec = MUN)|>

  group_by(cusec) |> 

  mutate(PorcentajeTurísticas2021 = round(mean(`PORCENTAJE VIVIENDA TURISTICA`), 2)) |> 

  select(cusec, PorcentajeTurísticas2021) |> 

  distinct(cusec, .keep_all = TRUE)



municipios <- municipios |> 

  left_join(turismo, by = "cusec") |> 

  distinct(cusec, .keep_all=T)



```

Añadir columnas de propiedad juvenil, diferencia...

Cambiar tipo ipv

### Diferencia entre 2021 y 2011

```{r}

# Definir databases
# 2011

compra11 <- microdatos2011 |> 
  select(CPRO, CMUN, EDAD, ANAC, NORDEN, ANORES, ANOM, LTRABA, MUNTRABA, TENEN, CON_NORDEN, OPA_NORDEN, TIPOPER, ESTHOG, EDADPAD, EDADMAD) 

compra11 <- compra11 |> 
  filter(EDAD %in% c(18:35), # Jóvenes
         TIPOPER != "H", # Que no son hijos en el núcleo
         is.na(EDADPAD), # Que no conviven con el padre
         is.na(EDADMAD)) |> # Que no conviven con la madre 
    select(-EDADPAD, -EDADMAD) |> 
  filter(ESTHOG %in% c(01, 02, 05, 07, 08, 10, 11)) # No es un hogar con una persona sola de +65 años ni hijos de más de 25

compra11 <- compra11 |> 
  mutate(mayor = ifelse(ANORES - ANAC > 18, TRUE, FALSE)) |> 
  filter(mayor == TRUE) # Que era mayor de edad en la última mudanza

compra11 <- compra11 |> 
  filter(NORDEN %in% c(1, 2)) # Que es orden 1 o 2 en el núcleo

#Recodificar tenen viv
compra11 <- compra11 |>  
  mutate(
    TENEN_r = case_when(
      TENEN == 1 ~ "Propiedad por compra, pagada",
      TENEN == 2 ~ "Propiedad por compra, pagos pendientes",
      TENEN == 3 ~ "Propiedad por herencia o donación",
      TENEN == 4 ~ "Alquiler",
      TENEN == 5 ~ "Cedida o a bajo precio",
      TENEN == 6 ~ "Otro")) |> 
  mutate(
    TENEN_VIV = case_when(
      TENEN_r %in% c("Propiedad por compra, pagada", "Propiedad por compra, pagos pendientes") ~ "Compra",
      TENEN_r == "Propiedad por herencia o donación" ~ "Herencia o donación",
      TENEN_r == "Alquiler" ~ "Alquiler",
      TENEN_r %in% c("Cedida o a bajo precio", "Otro") ~ "Otro"))

# Poner cusec
compra11 <- compra11 |>  
  mutate(
    CMUN = str_pad(CMUN, width = 3, side = "left", pad = "0"),
    CPRO = str_pad(CPRO, width = 2, side = "left", pad = "0")) |> 
   mutate(  
    CPRO = trimws(CPRO),
    CMUN = trimws(CMUN),
    cusec = paste0(CPRO, CMUN))

# 2021
compra21 <- microdatos2021 |> 
  select(CPRO, CMUN, VAREDAD, ANAC, TENEN_VIV, NORDEN, RESI_NACIM, VARANORES, VARANOM, CMUN_ANT, CMUN_UNANO, RESI_UNANO, CMUN_DANO, RESI_DANO, LTRAB, CMUN_TRAB, LEST, CMUN_EST, NORDEN_CON, NORDEN_OPA, TIPOPER, SEXO_MAD, SEXO_PAD, ESTRUC_HOG) 

compra21 <- compra21 |> 
  filter(VAREDAD %in% c(18:35), # Jóvenes
         TIPOPER != "H", # Que no son hijos en el núcleo
         SEXO_PAD == "N", # Que no conviven con el padre
         SEXO_MAD == "N") |>  # Que no conviven con la madre
  mutate(ESTRUC_HOG = as.numeric(ESTRUC_HOG)) |> 
  filter(ESTRUC_HOG %in% c(01, 02, 05, 07, 08, 10, 11)) # No es un hogar con una persona sola de +65 años ni hijos de más de 25

# Filtrar para haberse mudado a otra vivienda con mínimo 18 años, en una forma amplia

compra21 <- compra21 |> 
  mutate(
    VARANORES_r = case_when(
      VARANORES == "0005" ~ as.numeric(2015),
      VARANORES == "0004" ~ as.numeric(2010),
      VARANORES %in% c("9999", "0003") ~ as.numeric(2000), 
      VARANORES == " " ~ NA,
      TRUE ~ as.numeric(VARANORES)),
      ANAC = as.numeric(ANAC),
      mayor = ifelse(VARANORES_r - ANAC > 18, TRUE, FALSE)) |> 
  filter(mayor == TRUE)

compra21 <- compra21 |> 
  filter(NORDEN %in% c("01", "02")) # Que es orden 1 o 2 en el núcleo

# Recodificar código de tenencia

compra21 <- compra21 |> 
    mutate(
    TENEN_VIV = case_when(
      TENEN_VIV == 2 ~ "Propiedad",
      TENEN_VIV == 3 ~ "Alquiler",
      TENEN_VIV == 4 ~ "Otro")) 

# Poner cusec
compra21 <- compra21 |> 
  mutate(CPRO = trimws(CPRO), CMUN = trimws(CMUN), cusec = paste0(CPRO, CMUN))

# Crear variables por año -----------------------------------

# 2011
# Por municipio

compra11 <- compra11 |> 
  group_by(cusec) |> 
  mutate(
    Compra11Mun = round((sum(TENEN_VIV == "Compra") / n()) * 100, 2),
    Herencia11Mun = round((sum(TENEN_VIV == "Herencia o donación") / n()) * 100, 2),
    Alquiler11Mun = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro11Mun = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2)) |>   ungroup()

# 2021
# Por municipio
compra21 <- compra21 |> 
  group_by(cusec) |> 
  mutate(
    Propiedad21Mun = round((sum(TENEN_VIV == "Propiedad") / n()) * 100, 2),
    Alquiler21Mun = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro21Mun = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2)) |>   ungroup()

# Crear diferencia -------------------------

tenencia11 <- compra11 |> 
  select(cusec, Compra11Mun, Herencia11Mun, Alquiler11Mun, Otro11Mun) |> 
    distinct(cusec, .keep_all = T)

tenencia21 <- compra21 |> 
  select(cusec, Propiedad21Mun, Alquiler21Mun, Otro21Mun) |> 
  distinct(cusec, .keep_all = T)

tenencias <- tenencia11 |> 
  left_join(tenencia21, by = "cusec")

# Propiedad
tenencias <- tenencias |> 
  mutate(
    PropiedadDifMun = Propiedad21Mun - Compra11Mun)

# Alquiler

tenencias <- tenencias |> 
  mutate(
    AlquilerDifMun = Alquiler21Mun - Alquiler11Mun)

# Otro

tenencias <- tenencias |> 
  mutate(
    OtroDifProv = Otro21Mun - Otro11Mun)

municipios <- municipios |> 
  left_join(tenencias, by = "cusec") |> 
  distinct(cusec, .keep_all=T)

```

### Nacionalidad

```{r}



nacionalidad <- microdatos2021 |> 

   mutate(CPRO = trimws(CPRO), CMUN = trimws(CMUN), cusec = paste0(CPRO, CMUN)) |> 

    mutate(

    NACIONALIDAD = case_when(

      PNACIO == 108 ~ "Española",

      PNACIO %in% c(102:199) ~ "Europea",

      TRUE ~ "No europea")) |> 

  group_by(cusec) |> 

  mutate(PorcentajeEspañola = round(mean(NACIONALIDAD == "Española") * 100, 2),

         PorcentajeEuropea = round(mean(NACIONALIDAD == "Europea") * 100, 2),

         PorcentajeNoEuropea = round(mean(NACIONALIDAD == "No europea") * 100, 2)) |> 

  ungroup() |> 

  distinct(cusec, .keep_all = T) |> 

  select(cusec, PorcentajeEspañola, PorcentajeEuropea, PorcentajeNoEuropea)



municipios <- municipios |> 

  left_join(nacionalidad, by = "cusec")

```

Arreglar ipv general

## Problemas

-   Falta de datos de País Vasco y Navarra por temas administrativos

-   Municipios menores de 20.000 habitantes no podrán analizarse

-   IPV basado en CCAA, no municipios

-   Limitaciones al construir 'jóvenes que compran'

### Todo propiedad

```{r}
propiedad11 <- compra11 |> 
  group_by(cusec) |> 
  mutate(
    Propiedad11Mun = round((sum(TENEN_VIV %in% c("Compra", "Herencia o donación")) / n()) * 100, 2),
     Herencia11Mun = round((sum(TENEN_VIV == "Herencia o donación") / n()) * 100, 2),
    Alquiler11Mun = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro11Mun = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2)) |> 
  ungroup() 

propiedad11 <- propiedad11 |> 
  group_by(CPRO) |> 
  mutate(
    Propiedad11Prov = round((sum(TENEN_VIV %in% c("Compra", "Herencia o donación")) / n()) * 100, 2),
    Herencia11Prov = round((sum(TENEN_VIV == "Herencia o donación") / n()) * 100, 2),
    Alquiler11Prov = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro11Prov = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2)) |>   ungroup() |> 
  select(cusec, CPRO, Propiedad11Mun, Herencia11Mun, Alquiler11Mun, Otro11Mun, Propiedad11Prov, Herencia11Prov, Alquiler11Prov, Otro11Prov)

propiedad11 <- propiedad11 |> 
  distinct(cusec, .keep_all=T)

# 2021
propiedad21 <- compra21 |> 
  group_by(cusec) |> 
  mutate(
    Propiedad21Mun = round((sum(TENEN_VIV == "Propiedad") / n()) * 100, 2),
    Alquiler21Mun = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro21Mun = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2)) |> 
  ungroup() 

propiedad21 <- propiedad21 |> 
  group_by(CPRO) |> 
  mutate(
    Propiedad21Prov = round((sum(TENEN_VIV == "Propiedad") / n()) * 100, 2),
    Alquiler21Prov = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro21Prov = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2)) |>   ungroup() |> 
  select(cusec, Propiedad21Mun, Alquiler21Mun, Otro21Mun, Propiedad21Prov, Alquiler21Prov, Otro21Prov)

propiedad21 <- propiedad21 |> 
  distinct(cusec, .keep_all=T)

# Diferencia de propiedad11 con propiedad21

propiedad <- propiedad11 |> 
  left_join(propiedad21, by = "cusec")

propiedad <- propiedad |> 
  mutate(
    PropiedadDifMun = Propiedad21Mun - Propiedad11Mun,
    PropiedadDifProv = Propiedad21Prov - Propiedad11Prov,
    AlquilerDifMun = Alquiler21Mun - Alquiler11Mun,
    AlquilerDifProv = Alquiler21Prov - Alquiler11Prov,
    OtroDifMun = Otro21Mun - Otro11Mun,
    OtroDifProv = Otro21Prov - Otro11Prov) |> 
  filter(!is.na(Otro21Mun)) |> 
  left_join(nombres_provincias, by = "CPRO") |> 
  left_join(nombres_municipios, by = "cusec") |> 
    distinct(cusec, .keep_all = T) 

munis <- municipios |> 
  select(cusec, MUN_LITERAL)


#diferencia normal
munis <- municipios |> 
  select(MUN_LITERAL, PropiedadDifMun)

# alquiler normal
munisalq <- municipios |> 
  select(MUN_LITERAL, AlquilerDifMun)

# otro normal
munisotro <- municipios |> 
  select(MUN_LITERAL, Otro21Mun)




```

Ver distribucion de personas que viven en cada reg de tenencia en los municipiso de 2000 en 2011. ver si hay mas que en general. No sé... sacar alguna conclusión para ver la magnitud real del problema.

Caso de Nerja. Ha descendido el alquiler, no es que solo hay auamentado herencia.

Caso de Jaén 2000. Hay 150 personas menos en 2021. Mucha gente en régimen de otro en 2011, muchas de ellas en 'cedida'. Hay más peña joven en 'otro' que población general.

La mayoria de otro esta en pueblos pequeños. No esta interfiriendo solo la herencia sino también este traslado de gente que antes vivia en otro y ahora en propiedad. Cooperativas de vivienda?

También es posible que, el alquiler se reduce porque menos jovenes eligen ir ahi, igual que 'otro', y ese aumento en propiedad es por mayor herencia.

Caso de Úbeda. Hay 40 personas más en 2021. Menos alquiler, mismo de otro. En 2011 hay muy poca herencia. En 2021 un aumento significativo de propiedad. Aquí sí podemos decir que han comprado más casas, desde luego. Esto sí es compra, no es lo de pasar de cesión/otro a propiedad.

Caso de Huesca 2k-5k. En 2011 hay muy poca herencia. En 2021 disminuye mucho el alquiler y nos encontramos mucha más propiedad. Creo que en este caso también es claro ver que ha habido, efectivamente, COMPRA.

Caso de Lugo 2000. En 2021 encontramos un descenso del alquiler considerable, descenso de Otro y aumento de Propiedad. Si bien seguro que no toda la propiedad es por compra, porque existía cierta herencia considerable, seguramente mucha sí, y es un caso de municipio donde ha aumentado la compra o se ha mantenido similar. Pero diría que es aumento de compra ante el fuerte descenso del alquiler.

Caso de Maó (Balears). Ha aumentado el alquiler, pero sobre todo, la compra. Vemos que la herencia era muy residual en 2011.

Caso de Ronda (Málaga). Ha disminuido considerablemente el alquiler. En 2011 había muy poca herencia. Ha aumentado 'otro' y propiedad. Seguramente sea compra o quizá un poco más de herencia. Quizá se sobredimensiona la cantidad de jóvenes comprando, pero parece existir la tendencia de más jóvenes comprando que antes.

Caso de Vícar (Almería). No hay ningún caso de herencia en 2011. En 2021, aumenta la población en general, habiendo sobre todo más propiedad. Es compra muy seguramente. Pero PropiedadDifMun es -9%. Porque proporcionalmente ha descendido lap ropiedad, aunque realmente se ha mudado bastante gente joven ahí comprando casas. Pero también ha aumentado más las personas que viven de alquiler (+90%), y sobre todo Otro. Un aumento de población no me interesa a menos que sea realmente un aumento de gente que ha comprado casas? En Vícar hay menos porcentaje de personas jóvenes viviendo en casas que han comprado que antes, aunque a valores absolutos sean más. No está contrariando la tendencia de más alquiler, sino que forma parte de ella, porque de la gente joven nueva en el pueblo hay más que no han comprado que antes. Yo quiero ver en qué municipios hay más gente joven en casas compradas que antes.

Caso de Teruel 2000. Se reduce bastnate la población. Se reduce mucho el alquiler. La mitad 'otro'. La compra se reduce bastnate. No se sabe bien si esa propiedad entonces es por herencia. Es como que la población ha abandonado el pueblo en general.

```{r}
# general
table(propiedad11$TENEN_VIV)

# Nerja
propiedad11 %>%
  filter(cusec == 29075) %>%
  select(TENEN_VIV) %>%
  table()

compra21 %>%
  filter(cusec == 29075) %>%
  select(TENEN_VIV) %>%
  table()

# Jaén 2000
propiedad11 %>%
  filter(cusec == 23991) %>%
  select(TENEN_VIV) |> 
  table()

compra21 %>%
  filter(cusec == 23991) %>%
  select(TENEN_VIV) %>%
  table()

# Úbeda, top 2 ganancia de propiedad en Jaén menos 2k
propiedad11 %>%
  filter(cusec == 23092) %>%
  select(TENEN_VIV) |> 
  table()

compra21 %>%
  filter(cusec == 23092) %>%
  select(TENEN_VIV) %>%
  table()

# Huesca 2k-5k
propiedad11 %>%
  filter(cusec == 22992) %>%
  select(TENEN_VIV) |> 
  table()

compra21 %>%
  filter(cusec == 22992) %>%
  select(TENEN_VIV) %>%
  table()

# Lugo 2000
propiedad11 %>%
  filter(cusec == 27991) %>%
  select(TENEN_VIV) |> 
  table()

compra21 %>%
  filter(cusec == 27991) %>%
  select(TENEN_VIV) %>%
  table()

# Maó
propiedad11 %>%
  filter(cusec == "07032") %>%
  select(TENEN_VIV) |> 
  table()

compra21 %>%
  filter(cusec == "07032") %>%
  select(TENEN_VIV) %>%
  table()

# Ronda
propiedad11 %>%
  filter(cusec == 29084) %>%
  select(TENEN_VIV) |> 
  table()

compra21 %>%
  filter(cusec == 29084) %>%
  select(TENEN_VIV) %>%
  table()

# Vícar
propiedad11 %>%
  filter(cusec == "04102") %>%
  select(TENEN_VIV) |> 
  table()

compra21 %>%
  filter(cusec == "04102") %>%
  select(TENEN_VIV) %>%
  table()

# Teruel 2000
propiedad11 %>%
  filter(cusec == 44991) %>%
  select(TENEN_VIV) |> 
  table()

compra21 %>%
  filter(cusec == 44991) %>%
  select(TENEN_VIV) %>%
  table()


```

Conclusión: me fío de mis resultados de que no son sólo por herencia, sino precisamente de características de estos municipios (sobre todo rurales) que realmente era mi hipótesis al principio. Cada caso es distinto, y quizá en alguno existen más dudas, pero no se puede decir que los resultados sean todo por herencia no diferenciada.

## Análisis provincias

Las top provincias con más herencia en 2011 son Ourense, Pontevedra, Jaén, Cuenca, Teruel, Cáceres, Tenerife, Lugo, Badajoz, Albacete.

Las top provincias con más aumento de propiedad (compra + herencia) son: Teruel, Ceuta, Jaén, Lugo, Cuenca, Cáceres, Málaga, Ourense, Melilla.

Las top provincias con más aumento de compra (compra vs herencia) son: Teruel, Jaén, Cuenca, Lugo, Ourense, Cáceres, Ceuta, Málaga

Las top provincias con más descenso de Otro son: Cáceres, Gipuzkoa, Bizkaia, Jaén, Salamanca, Álava, Melilla, Huelva.

Las top provincias con más descenso de alquiler son:

Municipios de Jaén, herencia.

```{r}

herencia <- read_xlsx("herencia/herencia.xlsx")

herencia <- herencia %>%
  mutate(CPRO = sprintf("%02d", as.numeric(gsub("\\D", "", ...1))),
    PROV_LITERAL = gsub("\\d", "", ...1)) %>%
  select(-...1)

# viviendas totales 2011
viviendas_prov2011 <- viviendas2011 |>
    select(CPRO, CMUN, TENEN) |> 
  mutate(TENEN = as.numeric(TENEN),
  CPRO = sprintf("%02d", CPRO)) |> 
  filter(TENEN %in% c(1, 2, 3)) |> 
  group_by(CPRO) |> 
  mutate(ViviendasTotalesProv2011 = n()) |> 
  distinct(CPRO, .keep_all = T) |> 
  select(CPRO, ViviendasTotalesProv2011)

# viviendas totales 2021
viviendas_prov2021 <- viviendas2021 |>
    select(CPRO, CMUN, TENEN_VIV) |> 
  mutate(TENEN = as.numeric(TENEN_VIV)) |> 
  filter(TENEN %in% c(2)) |> 
  group_by(CPRO) |> 
  mutate(ViviendasTotalesProv2021 = n()) |> 
  distinct(CPRO, .keep_all = T) |> 
  select(CPRO, ViviendasTotalesProv2021)

viviendas_prov <- viviendas_prov2011 |> 
  left_join(viviendas_prov2021, by = "CPRO")

herencia <- herencia |> 
  left_join(viviendas_prov, by = "CPRO")


herencia <- herencia %>%
  mutate(
    PorcentajeHerencia2011 = round((Herencia2011 / ViviendasTotalesProv2011) * 100, 2),
    PorcentajeHerencia2021 = round((Herencia2021 / ViviendasTotalesProv2021) * 100, 2),
    DiferenciaHerencia = round(PorcentajeHerencia2021 - PorcentajeHerencia2011, 2)
  )

herencia <- herencia |> 
  select(CPRO, PROV_LITERAL, PorcentajeHerencia2011, PorcentajeHerencia2021, DiferenciaHerencia)

```

reducir herencia solo jaen 2000

```{r}

jaen <- propiedad %>%
  filter(cusec == 23991)

jaen$DiferenciaHerencia = 4.05



```

```{r}







compra21herencia <- compra21 |> 
    mutate(CPRO = substr(cusec, 1, 2)) |> 
  left_join(herencia, by = c("CPRO" = "CPRO")) |> 
  mutate(Herencia2021Mun = Propiedad21Mun * (PorcentajeHerencia2021 / 100),
      Compra2021Mun = Propiedad21Mun - Herencia2021Mun)

# Redondea los porcentajes a dos decimales si lo deseas
compra21herencia <- compra21herencia %>%
  mutate(
    Herencia2021Mun = round(Herencia2021Mun, 2),
    Compra2021Mun = round(Compra2021Mun, 2)
  )

compra21herencia <- compra21herencia %>%
  select(cusec, Compra2021Mun)


compratotalherencia <- municipios |> 
  left_join(compraherencia21, by =  "cusec")

compratotalherencia <- compratotalherencia |> 
  mutate(
    PropiedadDifMun = Compra2021Mun - Compra11Mun.x)

compratotalherenciar <- compratotalherencia |> 
  select(PROV_LITERAL, MUN_LITERAL, PropiedadDifMun)

```

Aquí lo que he hecho es reducir

```{r}
View(compratotalherenciar)

```

## Ignorando todo

```{r}

```

-   Mediante algun algoritmo, calcular una varibale de cuanto % de herencia hay en 2021?
