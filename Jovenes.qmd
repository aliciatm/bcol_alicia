---
title: "Untitled"
format: html
editor: visual
---

## Importar datos

```{r}

library(tidyverse)
library(ggpubr)
library(ggplot2)
library(patchwork)
library(readxl)
library(haven)


load("Microdatos2021/Personas/R/CensoPersonas_2021.RData")

microdatos2021 <- Microdatos
metadatos2021 <- Metadatos

microdatos2011 <- read_sav("Microdatos2011/Personas/poblacion_2011_v2.sav")

rm(Microdatos, Metadatos)
```

## Recodificaciones

```{r}

microdatos2021_rec <- microdatos2021 |> 
  mutate(
    HABITAT = case_when(
      CMUN %in% c(991, 992, 993) ~ "Rural",
      CMUN %in% c(666, 999) ~ NA,
      TRUE ~ "Urbano")) |> 
  mutate(
    TENEN_VIV = case_when(
      TENEN_VIV == 2 ~ "Propiedad",
      TENEN_VIV == 3 ~ "Alquiler",
      TENEN_VIV == 4 ~ "Otro")) |> 
  mutate(
    JOVEN = case_when(
      VAREDAD >= 18 & VAREDAD < 35 ~ "Joven",
      VAREDAD >= 35 ~ "Adulto",
      VAREDAD < 18 ~ "Niño",
      TRUE ~ NA))

## Filtrar microdatos

jovenes <- microdatos2021_rec |> 
  select(CPRO, CMUN, VAREDAD, TENEN_VIV, HABITAT, JOVEN) |>
      mutate(  
    CPRO = trimws(CPRO),
    CMUN = trimws(CMUN),
    cusec = paste0(CPRO, CMUN)) |> 
  filter(JOVEN == "Joven")

rm(metadatos2021)
```

### CCAA

```{r}

# Añadir CCAA 
ccaas <- data.frame(
  CodigoProvincia = c("01", "02", "03", "04", "33", "05", "06", "08", "09", "10", "11", "39", "12", "13", "14", "16", "17", "18", "19", "20", "21", "22", "23", "07", "24", "15", "35", "25", "26", "27", "28", "29", "30", "31", "32", "34", "36", "37",
"38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52"),
  
  CCAA = c("País Vasco", "Castilla-La Mancha", "Comunidad Valenciana", "Andalucía", "Asturias", "Castilla y León", "Extremadura", "Cataluña", "Castilla y León", "Extremadura", "Andalucía", "Cantabria", "Comunidad Valenciana", "Castilla-La Mancha", "Andalucía", "Castilla-La Mancha", "Cataluña", "Andalucía", "Castilla-La Mancha", "País Vasco", "Andalucía", "Aragón", "Andalucía", "Islas Baleares", "Castilla y León", "Galicia", "Canarias", "Cataluña", "La Rioja", "Galicia", "Comunidad de Madrid", "Andalucía", "Comunidad de Murcia", "Comunidad Foral de Navarra", "Galicia", "Castilla y León", "Galicia", "Castilla y León", "Canarias", "Cantabria", "Castilla y León", "Andalucía", "Castilla y León", "Cataluña", "Aragón", "Castilla-La Mancha", "Comunidad Valenciana", "Castilla y León", "País Vasco", "Castilla y León", "Aragón", "Ceuta", "Melilla"))


jovenes <- jovenes |> 
  left_join(ccaas, by = c("CPRO" = "CodigoProvincia"))

```

## Probabilidad compra/alquiler/otros de jóvenes en 2021

```{r}

jovenes <- jovenes |> 
  select(-VAREDAD)

# Por municipio
jovenes <- jovenes |> 
  group_by(cusec) |> 
  mutate(
    Propiedad21Mun = round((sum(TENEN_VIV == "Propiedad") / n()) * 100, 2),
    Alquiler21Mun = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro21Mun = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2))

# Por provincia

jovenes <- jovenes |> 
  group_by(CPRO) |> 
  mutate(
    Propiedad21Prov = round((sum(TENEN_VIV == "Propiedad") / n()) * 100, 2),
    Alquiler21Prov = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro21Prov = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2))

# Por CCAA

jovenes <- jovenes |> 
  group_by(CCAA) |> 
  mutate(
    Propiedad21CCAA = round((sum(TENEN_VIV == "Propiedad") / n()) * 100, 2),
    Alquiler21CCAA = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro21CCAA = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2))


# Por municipios rurales
# Esto hace que desaparezcan CPRO 51 y 52
#jovenes <- jovenes |> 
#  filter(HABITAT == "Rural") |> 
#  mutate(
#    Propiedad21Rural = round((sum(HABITAT == "Rural") / n()) * 100, 2),
#    Alquiler21Rural = round((sum(HABITAT == "Rural") / n()) * 100, 2),
#    Otro21Rural = round((sum(HABITAT == "Rural") / n()) * 100, 2))


```

Ahora reordenamos y eliminamos algunas variables

```{r}

jovenes <- jovenes |> 
  select(cusec, CCAA, CPRO, CMUN,  HABITAT, Propiedad21Mun, Alquiler21Mun, Otro21Mun, Propiedad21Prov, Alquiler21Prov, Otro21Prov, Propiedad21CCAA, Alquiler21CCAA, Otro21CCAA)

```

## Microdatos 2011

```{r}

variables <- c("CPRO", "CMUN", "EDAD", "TENEN")

microdatos2011_limpio <- microdatos2011 |> 
    select(all_of(variables))
  

 jovenes11 <- microdatos2011_limpio |> 
  mutate(
     HABITAT = case_when(
       CMUN %in% c(991, 992, 993, 994) ~ "Rural",
       TRUE ~ "Urbano"))|> 
  mutate(
    TENEN_r = case_when(
      TENEN == 1 ~ "Propiedad",
      TENEN == 2 ~ "Hipoteca",
      TENEN == 3 ~ "Herencia o donación",
      TENEN == 4 ~ "Alquiler",
      TENEN == 5 ~ "Cedida o a bajo precio",
      TENEN == 6 ~ "Otro")) |> 
   mutate(
     TENEN_VIV = case_when(
       TENEN_r %in% c("Propiedad", "Hipoteca", "Herencia o donación") ~ "Propiedad",
       TENEN_r == "Alquiler" ~ "Alquiler",
       TENEN_r %in% c("Cedida o a bajo precio", "Otro") ~ "Otro")) |> 
    mutate(
    JOVEN = case_when(
      EDAD >= 18 & EDAD < 35 ~ "Joven",
      EDAD >= 35 ~ "Adulto",
      EDAD < 18 ~ "Niño",
      TRUE ~ NA )) |> 
   mutate(
    CMUN = str_pad(CMUN, width = 3, side = "left", pad = "0"),
    CPRO = str_pad(CPRO, width = 2, side = "left", pad = "0")) |> 
    mutate(  
    CPRO = trimws(CPRO), #Esto para que no quede espacio tras usar paste
    CMUN = trimws(CMUN),
    cusec = paste0(CPRO, CMUN)) |> 
   filter(JOVEN == "Joven")
 
# Se añaden las CCAA 
jovenes11 <- jovenes11 |> 
  left_join(ccaas, by = c("CPRO" = "CodigoProvincia"))
```

## Probabilidad compra/alquiler/otros de jóvenes en 2011

```{r}

# Por municipio
jovenes11 <- jovenes11 |> 
  group_by(cusec) |> 
  mutate(
    Propiedad11Mun = round((sum(TENEN_VIV == "Propiedad") / n()) * 100, 2),
    Alquiler11Mun = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro11Mun = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2))

# Por provincia
jovenes11 <- jovenes11 |> 
  group_by(CPRO) |> 
  mutate(
    Propiedad11Prov = round((sum(TENEN_VIV == "Propiedad") / n()) * 100, 2),
    Alquiler11Prov = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro11Prov = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2))

# Por CCAA
jovenes11 <- jovenes11 |> 
  group_by(CCAA) |> 
  mutate(
    Propiedad11CCAA = round((sum(TENEN_VIV == "Propiedad") / n()) * 100, 2),
    Alquiler11CCAA = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro11CCAA = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2))


```

## Nombres lugares

```{r}
# Importar base de datos de vivienda turística porque incluye estos nombres
# Hay que poner eso de NA porque sino sale un warning muy largo
locations <- read_excel("vivienda turística/exp_viv_turistica_tabla5_FEB2021.xlsx", sheet = 3, na = "Dato protegido por secreto estadístico.")

nombres_municipios <- locations |> 
  select(MUN_LITERAL, MUN) |> 
  rename(cusec = MUN) |> 
  distinct(cusec, .keep_all = TRUE)

nombres_provincias <- locations |> 
  select(PROV_LITERAL, PROV) |> 
  rename(CPRO = PROV) |> 
  distinct(CPRO, .keep_all = TRUE)

```

## Unir ambas tablas con todas las columnas interesantes

Una sola row por cada municipio (cusec). En 2011 'censura' el código de identificación de los municipios de 10000 a 20000 habitantes, mientras que en 2021 sólo de los menores de 10000. Al juntar ambas datasets 'se pierde' la identificación de esos municipios de 10 a 20 mil. Pero son muy pocos y no creo que sea muy relevante; de todas formas se podría discernir cuáles son porque también aparece de qué provincia son.

```{r}
# Añadir nombres municipios y provincias
jovenes_total <- jovenes |> 
  left_join(nombres_municipios, by = "cusec", "cusec") |> 
  left_join(nombres_provincias, by = "CPRO", "CPRO") |> 
  distinct(cusec, .keep_all = TRUE)


# Añadir datos 2011
# Tiene menos municipios (porque los de 10k a 20k no los especifica)
jovenes_total <- jovenes11 |>
  distinct(cusec, .keep_all = TRUE) |> 
  select(cusec, CCAA, Propiedad11Mun, Alquiler11Mun, Otro11Mun, Propiedad11Prov, Alquiler11Prov, Otro11Prov, Propiedad11CCAA, Alquiler11CCAA, Otro11CCAA) |> 
  left_join(jovenes_total, by = "cusec", "cusec")


#Ordenar
# Al juntarlos se eliminan los municipios que sí salen en 2021
jovenes_total <- jovenes_total |> 
  select(cusec, CCAA.x, CPRO, PROV_LITERAL, CMUN, MUN_LITERAL, HABITAT, Propiedad21Mun, Alquiler21Mun, Otro21Mun, Propiedad11Mun, Alquiler11Mun, Otro11Mun, Propiedad21Prov, Alquiler21Prov, Otro21Prov, Propiedad11Prov, Alquiler11Prov, Otro11Prov, Propiedad21CCAA, Alquiler21CCAA, Otro21CCAA, Propiedad11CCAA, Alquiler11CCAA, Otro11CCAA) |> 
  filter(str_sub(cusec, -3) != "994") 
```

## Diferencia 2011 y 2021

### Por municipio

```{r}

# Propiedad
jovenes_total <- jovenes_total |> 
  mutate(
    PropiedadDifMun = Propiedad21Mun - Propiedad11Mun)

# Alquiler
jovenes_total <- jovenes_total |> 
  mutate(
    AlquilerDifMun = Alquiler21Mun - Alquiler11Mun)

# Otro
jovenes_total <- jovenes_total |> 
  mutate(
    OtroDifProv = Otro21Mun - Otro11Mun)


```

### Por provincia

```{r}
# Propiedad

jovenes_total <- jovenes_total |> 
  mutate(
    PropiedadDifProv = Propiedad21Prov - Propiedad11Prov)

# Alquiler
jovenes_total <- jovenes_total |> 
  mutate(
    AlquilerDifProv = Alquiler21Prov - Alquiler11Prov)

# Otro
jovenes_total <- jovenes_total |> 
  mutate(
    OtroDifProv = Otro21Prov - Otro11Prov)

```

## Mapas

### Mapa por mun

```{r}
library(mapSpain)
  
esp_can <- esp_get_country() 
can_prov <- esp_get_can_provinces()
can_box <- esp_get_can_box() 
munic <- esp_get_munic() 

munic <-    
  munic |>  
  mutate(cusec = cmun) |> 
  select(geometry, cusec)


# Mapa por municipios
# PROPIEDAD

mapa <- jovenes_total |> 
  select(CCAA.x, cusec, Propiedad21Mun)
  
mapa <- munic |> 
  left_join(mapa, by = "cusec")
  
mapa_mun <- ggplot(esp_can) +
    geom_sf() +
    geom_sf(data = can_prov) +
    geom_sf(data = can_box) + 
    geom_sf(data = mapa, aes(fill = Propiedad21Mun), color = "black", size = 1) + 
    theme_void() +  
    labs(title = "Probabilidad de compra por municipio") +  
    theme(legend.position = c(0.18, 0.55),    
          legend.justification = "center",   
          legend.background = element_rect(fill = NULL, colour = "black"),
          legend.margin = margin(6, 6, 6, 6))+ 
    guides(fill = guide_legend(ncol = 2)) + 
    coord_sf()

mapa_mun

#ALQUILER

mapa <- jovenes_total |> 
  select(CCAA.x, cusec, Alquiler21Mun)
  
mapa <- munic |> 
  left_join(mapa, by = "cusec")
  
mapa_mun <- ggplot(esp_can) +
    geom_sf() +
    geom_sf(data = can_prov) +
    geom_sf(data = can_box) + 
    geom_sf(data = mapa, aes(fill = Alquiler21Mun), color = "black", size = 1) + 
  theme_void() +  
  labs(title = "Probabilidad de alquiler por provincia") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6))+ 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf()

mapa_mun


```

### Mapa por provincias

```{r, fig.height=6, fig.width=12}
# Propiedad 2021
provic <- esp_get_prov() |> 
  mutate(CPRO = cpro)

mapa <- jovenes_total |> 
  select(CPRO, Propiedad21Prov)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")

mapa_prop_prov21 <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = Propiedad21Prov), color = "black", size = 1) + 
        geom_sf_text(data = mapa, aes(label = round(Propiedad21Prov, 1)), color = "black", size = 2.5, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas
  theme_void() +  
  labs(title = "Probabilidad de propiedad por provincia 2021") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6)) + 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_viridis_c(option = "C", direction = -1, limits = c(55, 85))


# Propiedad 2011
provic <- esp_get_prov() |> 
  mutate(CPRO = cpro)

mapa <- jovenes_total |> 
  select(CPRO, Propiedad11Prov)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")

mapa_prop_prov11 <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = Propiedad11Prov), color = "black", size = 1) + 
        geom_sf_text(data = mapa, aes(label = round(Propiedad11Prov, 1)), color = "black", size = 2.5, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas

  theme_void() +  
  labs(title = "Probabilidad de propiedad por provincia 2011") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6)) + 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_viridis_c(option = "C", direction = -1, limits = c(55, 85))

# Alquiler

provic <- esp_get_prov() |> 
  mutate(CPRO = cpro)

mapa <- jovenes_total |> 
  select(CPRO, Alquiler21Prov)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")

mapa_alq_prov21 <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = Alquiler21Prov), color = "black", size = 1) + 
        geom_sf_text(data = mapa, aes(label = round(Alquiler21Prov, 1)), color = "black", size = 2.5, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas

  theme_void() +  
  labs(title = "Probabilidad de alquiler por provincia") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6)) + 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_viridis_c(option = "C", direction = -1, limits = c(4, 34))


# Alquiler 2011

provic <- esp_get_prov() |> 
  mutate(CPRO = cpro)

mapa <- jovenes_total |> 
  select(CPRO, Alquiler11Prov)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")

mapa_alq_prov11 <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = Alquiler11Prov), color = "black", size = 1) + 
  geom_sf_text(data = mapa, aes(label = round(Alquiler11Prov, 1)), color = "black", size = 2.5, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas
  theme_void() +  
  labs(title = "Probabilidad de alquiler por provincia 2011") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6)) + 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_viridis_c(option = "C", direction = -1, limits = c(4, 34))

ggarrange(mapa_prop_prov21, mapa_prop_prov11, mapa_alq_prov21, mapa_alq_prov11,
          nrow=2, ncol=2)

```

### Variación por provincia de 2011 a 2021

```{r, fig.height=6, fig.width=12}
# Mapa por provincias PROPIEDAD

provic <- esp_get_prov() |> 
  mutate(CPRO = cpro)

mapa <- jovenes_total |> 
  select(CPRO, PropiedadDifProv)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")
  
mapa_propiedad_prov <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = PropiedadDifProv), color = "black", size = 1) + 
    geom_sf_text(data = mapa, aes(label = round(PropiedadDifProv, 1)), color = "black", size = 3, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas
  theme_void() +  
  labs(title = "Probabilidad de compra por provincia") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6))+ 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0, limits = c(-16, 5))

# ALQUILER


provic <- esp_get_prov() |> 
  mutate(CPRO = cpro)

mapa <- jovenes_total |> 
  select(CPRO, AlquilerDifProv)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")
  
mapa_alquiler_prov <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = AlquilerDifProv), color = "black", size = 1) + 
  geom_sf_text(data = mapa, aes(label = round(AlquilerDifProv, 1)), color = "black", size = 3, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas
  theme_void() +  
  labs(title = "Probabilidad de alquiler por provincia") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6)) + 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0, limits = c(-2, 17))


# OTRO

provic <- esp_get_prov() |> 
  mutate(CPRO = cpro)

mapa <- jovenes_total |> 
  select(CPRO, OtroDifProv)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")
  
mapa_otro_prov <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = OtroDifProv), color = "black", size = 1) + 
    geom_sf_text(data = mapa, aes(label = round(OtroDifProv, 1)), color = "black", size = 3, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas

  theme_void() +  
  labs(title = "Probabilidad de otro por provincia") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6))+ 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0, limits = c(-5, 5))

ggarrange(mapa_propiedad_prov, mapa_alquiler_prov, mapa_otro_prov,
          ncol = 2, nrow = 2)

```

## Ver top CCAA con mas propiedad y alquiler en 2021 y 2011

```{r, fig.height=6, fig.width=12}
# Top CCAA con más propiedad en 2021
top_propiedad_2021 <- jovenes_total %>%
  arrange(desc(Propiedad21CCAA)) %>%
  distinct(Propiedad21CCAA, .keep_all = TRUE) |> 
  select(Propiedad21CCAA, CCAA.x)

top_propiedad_2021

# Top CCAA con más alquiler en 2021
top_alquiler_2021 <- jovenes_total %>%
  arrange(desc(Alquiler21CCAA)) %>%
    distinct(Alquiler21CCAA, .keep_all = TRUE) |> 
    select(Alquiler21CCAA, CCAA.x)

top_alquiler_2021

# Top CCAA con más propiedad en 2011
top_propiedad_2011 <- jovenes_total %>%
  arrange(desc(Propiedad11CCAA)) %>%
    distinct(Propiedad11CCAA, .keep_all = TRUE) |> 
    select(Propiedad11CCAA, CCAA.x)

top_propiedad_2011

# Top CCCAA con más alquiler en 2011
top_alquiler_2011 <- jovenes_total %>%
    distinct(Alquiler11CCAA, .keep_all = TRUE) |> 
  arrange(desc(Alquiler11CCAA)) %>%
    select(Alquiler11CCAA, CCAA.x)


top_propiedad_2021
top_propiedad_2011
top_alquiler_2021
top_alquiler_2011


# Visualizar las cuatro tablas en cuatro gráficos de barras horizontales
plot_propiedad_2021 <- ggplot(jovenes_total, aes(x = reorder(CCAA.x, Propiedad21CCAA), y = Propiedad21CCAA)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Top CCAA con más propiedad en 2021", x = "CCAA", y = "Proporción de propiedad") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

plot_alquiler_2021 <- ggplot(jovenes_total, aes(x = reorder(CCAA.x, Alquiler21CCAA), y = Alquiler21CCAA)) +
  geom_bar(stat = "identity", fill = "salmon") +
  labs(title = "Top CCAA con más alquiler en 2021", x = "CCAA", y = "Proporción de alquiler") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

plot_propiedad_2011 <- ggplot(jovenes_total, aes(x = reorder(CCAA.x, Propiedad11CCAA), y = Propiedad11CCAA)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Top CCAA con más propiedad en 2011", x = "CCAA", y = "Proporción de propiedad") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

plot_alquiler_2011 <- ggplot(jovenes_total, aes(x = reorder(CCAA.x, Alquiler11CCAA), y = Alquiler11CCAA)) +
  geom_bar(stat = "identity", fill = "salmon") +
  labs(title = "Top CCAA con más alquiler en 2011", x = "CCAA", y = "Proporción de alquiler") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Mostrar los gráficos
ggarrange(plot_propiedad_2021, plot_alquiler_2021, plot_propiedad_2011, plot_alquiler_2011, nrow = 2, ncol = 2)


```

Las CCAA con más propiedad entre jóvenes en 2011 son País Vasco (83,12%), Comunidad Valenciana, Navarra, Murcia y Andalucía. Sin embargo, en 2021 éstas son Andalucía con un máximo de 77.31%, seguido de Extremadura, Castilla-La Mancha, Castilla y León y Comunidad de Murcia.

Esto muestra que ha habido un descenso generalizado de la propiedad en toda España, pero éste no ha sido homogéneo. Andalucía, por ejemplo, sólo pierde un 4%; mientras que País Vasco experimenta un descenso del 12%.

Con respecto a los valores más bajos de propiedad en 2011, éstos eran CCAA pequeñas como las islas y Ceuta y Melilla, así como Cataluña y Madrid. Esta tendencia sí se mantiene en 2021, salvo Ceuta, que pasa a tener más porcentaje de propiedad y sale de las CCAA más bajas.

Alquiler. El alquiler sobresalía en 2011 en las CCAA de Melilla, Baleares, Cataluña, Madrid. En 2021, si bien Melilla sigue encabezando la lista, ha entrado entre las CCAA con mayor alquiler País Vasco, que parece ser el caso más dramático, Aragón o Comunitat Valenciana Además, en las CCAA con poca proproción de alquiler, éste ha aumentado pero poco; y cuanto más alquiler en 2011, más ha aumentado para 2021. T

### Provincias

```{r}

# Top provincias con más propiedad en 2021
top_propiedad_2021 <- jovenes_total %>%
  arrange(desc(Propiedad21Prov)) %>%
  distinct(Propiedad21Prov, .keep_all = TRUE) |> 
  select(Propiedad21Prov, PROV_LITERAL)

top_propiedad_2021

# Top CCAA con más alquiler en 2021
top_alquiler_2021 <- jovenes_total %>%
  arrange(desc(Alquiler21Prov)) %>%
    distinct(Alquiler21Prov, .keep_all = TRUE) |> 
    select(Alquiler21Prov, PROV_LITERAL)

top_alquiler_2021

# Top CCAA con más propiedad en 2011
top_propiedad_2011 <- jovenes_total %>%
  arrange(desc(Propiedad11Prov)) %>%
    distinct(Propiedad11Prov, .keep_all = TRUE) |> 
    select(Propiedad11Prov, PROV_LITERAL)

top_propiedad_2011

# Top CCCAA con más alquiler en 2011
top_alquiler_2011 <- jovenes_total %>%
    distinct(Alquiler11Prov, .keep_all = TRUE) |> 
  arrange(desc(Alquiler11Prov)) %>%
    select(Alquiler11Prov, PROV_LITERAL)


top_propiedad_2021
top_propiedad_2011
top_alquiler_2021
top_alquiler_2011


```

Provincias como Barcelona han perdido un 15% de propiedad, así como Álava y en general la Comunitat Valenciana, como veíamos antes.

A primera vista, no parece que la proporción de vivienda turística explique totalmente la menor propiedad. Algunos casos como el de la Comunitat Valenciana, las islas o Cataluña (especialmente Barcelona) podrían relacionarse con esto. Pero en casos como la provincia de Málaga que tiene una cantidad enorme de vivienda turística, no se ve este descenso de propiedad; o en casos como el País Vasco y Zaragoza, hay gran descenso de propiedad pero no hay mucho turismo.

Las únicas provincias con más propiedad en 2021 que en 2011 son Jaén, Cáceres y Teruel, aunque con una variación muy pequeña. Son ciudades con menos población joven (y población en general).

### Por municipios

```{r}

top_dif_propiedad <- jovenes_total %>%
    distinct(PropiedadDifMun, .keep_all = TRUE) |> 
  arrange(desc(PropiedadDifMun)) %>%
    select(PropiedadDifMun, CCAA.x, PROV_LITERAL, MUN_LITERAL, CMUN)

```

Hay municipios donde sí están comprando más los jóvenes que en 2011, contrariando la tendencia general. Con un máximo de +9%, encontramos Úbeda, un municipio grande en Jaén. Seguido de Nerja en Málaga, Conil de la Frontera, Ronda, Écija, Carmona... También encontramos a Ceuta. Son municipios andaluces que no son las capitales de provincia pero son significativos, ofrecen puestos de trabajo, incluso una universidad en Carmona. Son municipios cercanos a la capital y donde es frecuente que la gente viaje todos los días a ella para trabajar. Podríamos ver por tanto que son municipios en las áreas metropolitanas. Se podría comprobar si ésto se produce por motivos laborales viendo la situación laboral.

Por otra parte, vemos municipios cuyo nombre desconocemos al tener menos de 20000 habitantes, pertenecientes de nuevo a Andalucía o a Castilla y León, Galicia...

Por otro lado, los municipios donde ahora residen menos los jóvenes en propiedad son de Cataluña, Comunitat Valenciana o País Vasco. Podría analizarse si en Comunitat Valenciana por ejempo se produce más en municipios con más vivienda turística (ej. Benidorm aparece con -17%).

Este aumento es mayor que en el grupo de 'adultos', y no coinciden todos los municipios. El aumento de alquiler en País Vasco, además, es mucho más notable entre jóvenes.

# Propiedad por compra de jóvenes en 2011

Un 38.59% de los jóvenes en 2011 tenían un régimen de vivienda de 'hipoteca', siendo el régimen de tenencia más frecuente seguido de 'propiedad'. Sólo un 12.87% vivían de alquiler. La edad media de los jóvenes con hipoteca era un año superior a la población joven general.

```{r}

ggplot(jovenes11,mapping=aes(x=TENEN_r, fill = TENEN_r))+geom_bar(aes(y=..count../sum(..count..)))

(sum(jovenes11$TENEN_r == "Hipoteca") / nrow(jovenes11)) * 100
(sum(jovenes11$TENEN_r == "Alquiler") / nrow(jovenes11)) * 100

hipotecados <- jovenes11 |> 
  filter(TENEN_r == "Hipoteca")

# Edad media
mean(jovenes11$EDAD)
mean(hipotecados$EDAD)


# Por municipio
jovenes11 <- jovenes11 |> 
  group_by(cusec) |> 
  mutate(
    Hipoteca11Mun = round((sum(TENEN_r == "Hipoteca") / n()) * 100, 2))

hipotecas <- jovenes11 |> 
  select(cusec,Hipoteca11Mun) |> 
  distinct(cusec, .keep_all = TRUE)

jovenes_total <- jovenes_total |> 
  left_join(hipotecas, by = "cusec")


jovenes_total |> 
  arrange(desc(Hipoteca11Mun)) %>%
  distinct(cusec, .keep_all = TRUE) |> 
  select(PROV_LITERAL, MUN_LITERAL, Hipoteca11Mun)

```

# Definiendo a los jóvenes que compran


## En 2011

```{r}

compra11 <- microdatos2011 |> 
  select(CPRO, CMUN, EDAD, ANAC, NORDEN, ANORES, ANOM, LTRABA, MUNTRABA, TENEN, CON_NORDEN, OPA_NORDEN, TIPOPER, ESTHOG, EDADPAD, EDADMAD) 

compra11 <- compra11 |> 
  filter(EDAD %in% c(18:35), # Jóvenes
         TIPOPER != "H", # Que no son hijos en el núcleo
         is.na(EDADPAD), # Que no conviven con el padre
         is.na(EDADMAD)) |> # Que no conviven con la madre 
    select(-EDADPAD, -EDADMAD) |> 
  filter(ESTHOG %in% c(01, 02, 05, 07, 08, 10, 11)) # No es un hogar con una persona sola de +65 años ni hijos de más de 25

compra11 <- compra11 |> 
  mutate(mayor = ifelse(ANORES - ANAC > 18, TRUE, FALSE)) |> 
  filter(mayor == TRUE) # Que era mayor de edad en la última mudanza
  
#Recodificar tenen viv
compra11 <- compra11 |>  
  mutate(
    TENEN_r = case_when(
      TENEN == 1 ~ "Propiedad por compra, pagada",
      TENEN == 2 ~ "Propiedad por compra, pagos pendientes",
      TENEN == 3 ~ "Propiedad por herencia o donación",
      TENEN == 4 ~ "Alquiler",
      TENEN == 5 ~ "Cedida o a bajo precio",
      TENEN == 6 ~ "Otro")) |> 
  mutate(
    TENEN_VIV = case_when(
      TENEN_r %in% c("Propiedad por compra, pagada", "Propiedad por compra, pagos pendientes") ~ "Compra",
      TENEN_r == "Propiedad por herencia o donación" ~ "Herencia o donación",
      TENEN_r == "Alquiler" ~ "Alquiler",
      TENEN_r %in% c("Cedida o a bajo precio", "Otro") ~ "Otro"))

```

Añadir nombres municipios/provincias

```{r}

# Crear los códigos cusec de los municipios no especificados
cusec_991 <- sprintf("%05d", seq(1991, 52991, by = 1000))
cusec_992 <- sprintf("%05d", seq(1992, 52992, by = 1000))
cusec_993 <- sprintf("%05d", seq(1993, 52993, by = 1000))
cusec_994 <- sprintf("%05d", seq(1994, 52994, by = 1000))
cusec <- c(cusec_991, cusec_992, cusec_993, cusec_994)

MUN_LITERAL <- 
  ifelse(substr(cusec, 4, 5) == "91","<=2000",
  ifelse(substr(cusec, 4, 5) == "92", "2001 <= 5000",
  ifelse(substr(cusec, 4, 5) == "93", "5001 <= 10000",
  ifelse(substr(cusec, 4, 5) == "94", "10001 <= 20000","Otros"))))

df_rural <- data.frame(MUN_LITERAL, cusec)
  
nombres_municipios <- rbind(nombres_municipios, df_rural)
  
#Añado id para evitar duplicados
compra11 <- compra11 |> 
  mutate(id = row_number())


# Añadir nombres de provincias y municipios
compra11 <- compra11 |> 
  mutate(
    CMUN = str_pad(CMUN, width = 3, side = "left", pad = "0"),
    CPRO = str_pad(CPRO, width = 2, side = "left", pad = "0")) |> 
   mutate(  
    CPRO = trimws(CPRO),
    CMUN = trimws(CMUN),
    cusec = paste0(CPRO, CMUN)) |> 
  
  left_join(nombres_municipios, by = "cusec") |> 
  left_join(nombres_provincias, by = "CPRO") |> 
  
  distinct(id, .keep_all = T)

compra11_r <- compra11 |> 
  filter(TENEN_r %in% c("Propiedad por compra, pagada", "Propiedad por compra, pagos pendientes"))
  
```


## En 2021

Hay limitaciones, porque no puedo retirar exactamente que NO sean herencia.


```{r}

compra21 <- microdatos2021 |> 
  select(CPRO, CMUN, VAREDAD, ANAC, TENEN_VIV, NORDEN, RESI_NACIM, VARANORES, VARANOM, CMUN_ANT, CMUN_UNANO, RESI_UNANO, CMUN_DANO, RESI_DANO, LTRAB, CMUN_TRAB, LEST, CMUN_EST, NORDEN_CON, NORDEN_OPA, TIPOPER, SEXO_MAD, SEXO_PAD, ESTRUC_HOG) 

compra21 <- compra21 |> 
  filter(VAREDAD %in% c(18:35), # Jóvenes
         TIPOPER != "H", # Que no son hijos en el núcleo
         SEXO_PAD == "N", # Que no conviven con el padre
         SEXO_MAD == "N") |>  # Que no conviven con la madre
  mutate(ESTRUC_HOG = as.numeric(ESTRUC_HOG)) |> 
  filter(ESTRUC_HOG %in% c(01, 02, 05, 07, 08, 10, 11)) # No es un hogar con una persona sola de +65 años ni hijos de más de 25

# Filtrar para haberse mudado a otra vivienda con mínimo 18 años, en una forma amplia

compra21 <- compra21 |> 
  mutate(
    VARANORES_r = case_when(
      VARANORES == "0005" ~ as.numeric(2015),
      VARANORES == "0004" ~ as.numeric(2010),
      VARANORES %in% c("9999", "0003") ~ as.numeric(2000), 
      VARANORES == " " ~ NA,
      TRUE ~ as.numeric(VARANORES)),
      ANAC = as.numeric(ANAC),
      mayor = ifelse(VARANORES_r - ANAC > 18, TRUE, FALSE)) |> 
  filter(mayor == TRUE)


compra21 <- compra21 |> 
    mutate(
    TENEN_VIV = case_when(
      TENEN_VIV == 2 ~ "Propiedad",
      TENEN_VIV == 3 ~ "Alquiler",
      TENEN_VIV == 4 ~ "Otro")) 



```

Añadir nombres

```{r}

#Añado id para evitar duplicados
compra21 <- compra21 |> 
  mutate(id = row_number())


compra21 <- compra21 |> 
  mutate(
    CMUN = str_pad(CMUN, width = 3, side = "left", pad = "0"),
    CPRO = str_pad(CPRO, width = 2, side = "left", pad = "0")) |> 
   mutate(  
    CPRO = trimws(CPRO),
    CMUN = trimws(CMUN),
    cusec = paste0(CPRO, CMUN)) |> 
  
  left_join(nombres_municipios, by = "cusec") |> 
  left_join(nombres_provincias, by = "CPRO") |> 
  
  distinct(id, .keep_all = T)


compra21_r <- compra21 |> 
  filter(TENEN_VIV == "Propiedad")

```

## Descriptivo
### 2011
Hay menos jóvenes con las condiciones especificadas en 2021 que en 2011. 

- Edad. La media de edad en 2011 es de 31,1, en 2021 es de 30,35.

- Número de orden en el núcleo. La mitad de los casos tienen a la persona encuestada como primera persona en el orden del núcleo, con un 42,8% restante siendo la segunda persona. Le siguen un 4,1% siendo la tercera persona, un 2,3% la cuarta, 1% la quinta, y porecentajes desdeñables el resto. Hay una persona que es la persona número 24. Vemos exactamente quiénes son estas personas: personas con un 50% de desempleo (25% superior al resto). Residiendo en Ceuta, Melilla. Son 941 personas.

- Orden de un pariente. Quizá quitar personas que su otro pariente tiene un orden superior (1, 2?) La mayoría de casos los parientes son el número 3, con 93%. (pueden ser hijos, por ejemplo). En un 44% de los casos no hay familiares.

- Trabajo. La mayoría de personas trabajan en un municipio distinto al que residen (45,5%), seguido de personas que trabajan en el mismo municipio (36,6%). 

- Año de llegada a la vivienda. En la mayoría de los casos se llegó en 2006 o 2007 (es también la media). Sería una edad media de 25-26 años.

- Condición dentro del núcleo. Un 79% delas personas son cónyuges, un 17.5% personas que viven solas y el resto madres y padres solteros.

- Estructura del hogar. La mayoría de los casos, 44,8%, es un hogar formado por una pareja con hijos. En segundo lugar, 29,6%, hogar formado por pareja sin hijos. En tercer lugar, con 5,9%, 'otro tipo de hogar', que puede ser compañeros de piso no emparentados, o otros familiares. El último es padre o madre soltera.

- Tipo de compra. En el 90,1% de los casos quedan pagos de la hipoteca pendientes.

- Provincia. No da mucha información porque salen las provincias más y menos pobladas, no proporcionalmente según su población.

```{r}
# Edad
mean(compra11_r$EDAD)
round(prop.table(table(compra11_r$EDAD)), digits = 3)

# Número de orden
round(prop.table(table(compra11_r$NORDEN)), digits = 3)
(table(compra11_r$NORDEN))

raros <- compra11_r |> 
  filter(NORDEN > 5)
mean(is.na(raros$LTRABA)) * 100

# Otro pariente
round(prop.table(table(compra11_r$OPA_NORDEN)), digits = 3)
mean(is.na(compra11_r$OPA_NORDEN)) * 100

# Trabajo
mean(is.na(compra11_r$LTRABA)) * 100
round(prop.table(table(compra11_r$LTRABA)), digits = 3)
mean(is.na(compra11$LTRABA)) * 100


# Año de llegada a la vivienda
mean(compra11_r$ANORES)
round(prop.table(table(compra11_r$ANORES)), digits = 3)

# Condición dentro del núcleo
round(prop.table(table(compra11_r$TIPOPER)), digits = 3)

# Estructura del hogar
round(prop.table(table(compra11_r$ESTHOG)), digits = 3)

# Régimen de tenencia
round(prop.table(table(compra11_r$TENEN_r)), digits = 3)

# Provincias
head(sort(prop.table(table(compra11_r$PROV_LITERAL)), decreasing = TRUE), 3)
tail(sort(prop.table(table(compra11_r$PROV_LITERAL)), decreasing = TRUE), 3)

```
### 2021

- Edad. La edad es más joven lo cual me hace suponer que es por filtrar mal.

- Número de orden. Un 37,3% es número 1, un 44,4% número 2, seguido de un 11,5% 3 y 4,6% 4. Hay más personas donde la persona joven no es número 1 ni 2, seguramente estoy incluyendo casos que no me interesan que no son compra. Quizá filtrar directamente a partir de 4?

Las personas con un orden de 6 o más presentan más desempleo, al igual que en 2011. Son 1494.

- Trabajo. Un 29% no trabajan. La población joven con otros regimenes de tenencia, sin filtrar por compra, es un 32%.

- Otro pariente. En la mayoría de los casos el familiar es número 3, seguido de 4. En un 51% de casos no hay parientes. Es más alto que en 2011.

- Condición dentro del núcleo. La mayoría 58,5% viven en pareja. Hay el doble de personas que viven solas, que en 2011, un 36,6%. Hay también más madres solteras, pero igual padres solteros.

- Estructura del hogar. La mayoría de hogares son familias en pareja con hijos (30,2%), pero menos que en 2011 (44,8%).  Continúan en empate pareja sin hijos 19,6% y otro tipo de hogar, pero ha aumentado mucho más este otro tipo de hogar en 2021.
```{r}

# Edad
mean(compra21_r$VAREDAD)
round(prop.table(table(compra21_r$VAREDAD)), digits = 3)

# Número de orden
round(prop.table(table(compra21_r$NORDEN)), digits = 3)
(table(compra21_r$NORDEN))

raros <- compra21_r |> 
  mutate(NORDEN = as.numeric(NORDEN)) |> 
  filter(NORDEN > 05)

mean(raros$LTRAB == " ") * 100
mean(compra21_r$LTRAB == " ") * 100

# Otro pariente
round(prop.table(table(compra21_r$NORDEN_OPA)), digits = 3)

# Trabajo
mean(is.na(compra11_r$LTRABA)) * 100
round(prop.table(table(compra11_r$LTRABA)), digits = 3)

# Año de llegada a la vivienda
# Habría que transofrmar la variable
compra21_r$VARANORES_r <- as.numeric(compra21_r$VARANORES_r)

mean(compra21_r$VARANORES_r)
round(prop.table(table(compra21_r$ANORES)), digits = 3)

# Condición dentro del núcleo
round(prop.table(table(compra21_r$TIPOPER)), digits = 3)

# Estructura del hogar
round(prop.table(table(compra21_r$ESTRUC_HOG)), digits = 3)

# Provincias
head(sort(prop.table(table(compra21_r$PROV_LITERAL)), decreasing = TRUE), 3)
tail(sort(prop.table(table(compra21_r$PROV_LITERAL)), decreasing = TRUE), 3)
```


## Dónde compran en 2011

```{r}

# Por municipio
compra11 <- compra11 |> 
  group_by(cusec) |> 
  mutate(
    Compra11Mun = round((sum(TENEN_VIV == "Compra") / n()) * 100, 2),
    Herencia11Mun = round((sum(TENEN_VIV == "Herencia o donación") / n()) * 100, 2),
    Alquiler11Mun = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro11Mun = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2)) |> 
  ungroup()

# Por provincia
compra11 <- compra11 |> 
  group_by(CPRO) |> 
  mutate(
    Compra11Prov = round((sum(TENEN_VIV == "Compra") / n()) * 100, 2),
    Herencia11Prov = round((sum(TENEN_VIV == "Herencia o donación") / n()) * 100, 2),
    Alquiler11Prov = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro11Prov = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2)) |>   ungroup()


compra11 |> 
    distinct(cusec, .keep_all = TRUE) |> 
  arrange(desc(Compra11Mun)) |> 
    select(Compra11Mun, MUN_LITERAL, PROV_LITERAL, cusec)

compra11 |> 
    distinct(cusec, .keep_all = TRUE) |> 
  arrange(desc(Herencia11Mun)) |> 
    select(Herencia11Mun, MUN_LITERAL, PROV_LITERAL, cusec)

compra11 |> 
    distinct(CPRO, .keep_all = TRUE) |> 
    arrange(desc(Compra11Prov)) |> 
    select(Compra11Prov, PROV_LITERAL)


```


### Mapa por provincias

```{r, fig.height=6, fig.width=12}

library(mapSpain)
  
esp_can <- esp_get_country() 
can_prov <- esp_get_can_provinces()
can_box <- esp_get_can_box() 
munic <- esp_get_munic() 

provic <- esp_get_prov() |> 
  mutate(CPRO = cpro)

mapa <- compra11 |> 
  select(CPRO, Compra11Prov) |> 
  distinct(CPRO, .keep_all = TRUE)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")

# Compra
p1 <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = Compra11Prov), color = "black", size = 1) + 
        geom_sf_text(data = mapa, aes(label = round(Compra11Prov, 1)), color = "black", size = 2.5, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas
  theme_void() +  
  labs(title = "Porcentaje de compra por provincia 2011") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6)) + 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_viridis_c(option = "C", direction = -1)

# Herencia o donación

mapa <- compra11 |> 
  select(CPRO, Herencia11Prov) |> 
  distinct(CPRO, .keep_all = TRUE)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")

p2 <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = Herencia11Prov), color = "black", size = 1) + 
        geom_sf_text(data = mapa, aes(label = round(Herencia11Prov, 1)), color = "black", size = 2.5, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas
  theme_void() +  
  labs(title = "Porcentaje de herencia/donación por provincia 2011") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6)) + 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_viridis_c(option = "C", direction = -1)

# Alquiler
mapa <- compra11 |> 
  select(CPRO, Alquiler11Prov) |> 
  distinct(CPRO, .keep_all = TRUE)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")

p3 <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = Alquiler11Prov), color = "black", size = 1) + 
        geom_sf_text(data = mapa, aes(label = round(Alquiler11Prov, 1)), color = "black", size = 2.5, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas
  theme_void() +  
  labs(title = "Porcentaje de alquiler por provincia 2011") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6)) + 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_viridis_c(option = "C", direction = -1)

# Otro
mapa <- compra11 |> 
  select(CPRO, Otro11Prov) |> 
  distinct(CPRO, .keep_all = TRUE)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")

p4 <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = Otro11Prov), color = "black", size = 1) + 
        geom_sf_text(data = mapa, aes(label = round(Otro11Prov, 1)), color = "black", size = 2.5, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas
  theme_void() +  
  labs(title = "Porcentaje de otro por provincia 2011") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6)) + 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_viridis_c(option = "C", direction = -1)


ggarrange(p1, p2, p3, p4, ncol=2, nrow = 2)

```
## Dónde compran en 2021

```{r}

# Por municipio
compra21 <- compra21 |> 
  group_by(cusec) |> 
  mutate(
    Propiedad21Mun = round((sum(TENEN_VIV == "Propiedad") / n()) * 100, 2),
    Alquiler21Mun = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro21Mun = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2)) |> 
  ungroup()

# Por provincia
compra21 <- compra21 |> 
  group_by(CPRO) |> 
  mutate(
    Propiedad21Prov = round((sum(TENEN_VIV == "Propiedad") / n()) * 100, 2),
    Alquiler21Prov = round((sum(TENEN_VIV == "Alquiler") / n()) * 100, 2),
    Otro21Prov = round((sum(TENEN_VIV == "Otro") / n()) * 100, 2)) |>   ungroup()

compra21 |> 
    distinct(cusec, .keep_all = TRUE) |> 
  arrange(desc(Propiedad21Mun)) |> 
    select(Propiedad21Mun, MUN_LITERAL, PROV_LITERAL, cusec)

compra21 |> 
    distinct(CPRO, .keep_all = TRUE) |> 
    arrange(desc(Propiedad21Prov)) |> 
    select(Propiedad21Prov, PROV_LITERAL)



```

### Mapa por provincias

```{r, fig.height=6, fig.width=12}

library(mapSpain)
  
esp_can <- esp_get_country() 
can_prov <- esp_get_can_provinces()
can_box <- esp_get_can_box() 
munic <- esp_get_munic() 

provic <- esp_get_prov() |> 
  mutate(CPRO = cpro)

mapa <- compra21 |> 
  select(CPRO, Propiedad21Prov) |> 
  distinct(CPRO, .keep_all = TRUE)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")

# Compra
p1 <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = Propiedad21Prov), color = "black", size = 1) + 
        geom_sf_text(data = mapa, aes(label = round(Propiedad21Prov, 1)), color = "black", size = 2.5, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas
  theme_void() +  
  labs(title = "Porcentaje de propiedad por provincia 2021") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6)) + 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_viridis_c(option = "C", direction = -1)


# Alquiler
mapa <- compra21 |> 
  select(CPRO, Alquiler21Prov) |> 
  distinct(CPRO, .keep_all = TRUE)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")

p3 <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = Alquiler21Prov), color = "black", size = 1) + 
        geom_sf_text(data = mapa, aes(label = round(Alquiler21Prov, 1)), color = "black", size = 2.5, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas
  theme_void() +  
  labs(title = "Porcentaje de alquiler por provincia 2021") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6)) + 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_viridis_c(option = "C", direction = -1)

# Otro
mapa <- compra21 |> 
  select(CPRO, Otro21Prov) |> 
  distinct(CPRO, .keep_all = TRUE)

mapa <- provic |> 
  left_join(mapa, by = "CPRO")

p4 <- ggplot(esp_can) +
  geom_sf() +
  geom_sf(data = can_prov) +
  geom_sf(data = can_box) + 
  geom_sf(data = mapa, aes(fill = Otro21Prov), color = "black", size = 1) + 
        geom_sf_text(data = mapa, aes(label = round(Otro21Prov, 1)), color = "black", size = 2.5, check_overlap = TRUE, nudge_y = 0.1) +  # Agregar etiquetas
  theme_void() +  
  labs(title = "Porcentaje de otro por provincia 2011") +  
  theme(legend.position = c(0.18, 0.55),    
        legend.justification = "center",   
        legend.background = element_rect(fill = NULL, colour = "black"),
        legend.margin = margin(6, 6, 6, 6)) + 
  guides(fill = guide_legend(ncol = 2)) + 
  coord_sf() +
  scale_fill_viridis_c(option = "C", direction = -1)


ggarrange(p1, p3, p4, ncol=2, nrow = 2)

```



## Comparar la propiedad así con la propiedad sin los filtros.

### Provincias

- 2021 con filtro. La provincia 

```{r}

# Top provincias con más propiedad en 2021
top_propiedad_2021_filtro <- compra21 %>%
  arrange(desc(Propiedad21Prov)) %>%
  distinct(Propiedad21Prov, .keep_all = TRUE) |> 
  select(Propiedad21Prov, PROV_LITERAL)


# Top provincias con más propiedad en 2021 NO FILTRO
top_propiedad_2021 <- jovenes_total %>%
  arrange(desc(Propiedad21Prov)) %>%
  distinct(Propiedad21Prov, .keep_all = TRUE) |> 
  select(Propiedad21Prov, PROV_LITERAL)


# Top provincias con más propiedad en 2011
top_propiedad_2011_filtro <- compra11 %>%
  arrange(desc(Compra11Prov)) %>%
  distinct(Compra11Prov, .keep_all = TRUE) |> 
  select(Compra11Prov, PROV_LITERAL)


# Top CCAA con más propiedad en 2011 NO FILTRO
top_propiedad_2011 <- jovenes_total %>%
  arrange(desc(Propiedad11Prov)) %>%
    distinct(Propiedad11Prov, .keep_all = TRUE) |> 
    select(Propiedad11Prov, PROV_LITERAL)


# Top provincias con más compra en 2011
top_compra_2011 <- compra11 %>%
  arrange(desc(Compra11Prov)) %>%
  distinct(Compra11Prov, .keep_all = TRUE) |> 
  select(Compra11Prov, PROV_LITERAL)

top_propiedad_2021_filtro
top_propiedad_2021
top_propiedad_2011_filtro
top_propiedad_2011
top_compra_2011

```

### Municipios
```{r}

# Top municipios con más propiedad en 2021
top_propiedad_2021_filtro <- compra21 %>%
  arrange(desc(Propiedad21Mun)) %>%
  distinct(Propiedad21Mun, .keep_all = TRUE) |> 
  select(Propiedad21Mun, PROV_LITERAL)

# Top municipios con más propiedad en 2021 NO FILTRO
top_propiedad_2021 <- jovenes_total %>%
  arrange(desc(Propiedad21Mun)) %>%
  distinct(Propiedad21Mun, .keep_all = TRUE) |> 
  select(Propiedad21Mun, PROV_LITERAL)

# Top municipios con más propiedad en 2011
top_propiedad_2011 <- compra11 %>%
  arrange(desc(Compra11Mun)) %>%
  distinct(Compra11Mun, .keep_all = TRUE) |> 
  select(Compra11Mun, PROV_LITERAL)

# Top municipios con más propiedad en 2011 NO FILTRO
top_propiedad_2011 <- jovenes_total %>%
  arrange(desc(Propiedad11Mun)) %>%
    distinct(Propiedad11Mun, .keep_all = TRUE) |> 
    select(Propiedad11Mun, PROV_LITERAL)

# Top municipios con más compra en 2011
top_compra_2011 <- compra11 %>%
  arrange(desc(Compra11Mun)) %>%
  distinct(Compra11Mun, .keep_all = TRUE) |> 
  select(Compra11Mun, PROV_LITERAL)

# Top provincias con más herencia en 2011
top_compra_2021 <- compra11 %>%
  arrange(desc(Herencia11Mun)) %>%
  distinct(Herencia11Mun, .keep_all = TRUE) |> 
  select(Herencia11Mun, PROV_LITERAL)

top_propiedad_2021_filtro
top_propiedad_2021
top_propiedad_2011_filtro
top_propiedad_2011
top_compra_2011
top_compra_2011

```


## Diferencia entre años

Juntar tablas
```{r}

compra11_mun <- compra11 |> 
  distinct(cusec, .keep_all=T)

compra21_mun <- compra21 |> 
  distinct(cusec, .keep_all=T)

compra_total_mun <- compra11_mun |> 
  left_join(compra21_mun, by = "cusec") |> 
    rename_with(~str_replace(., "\\.y$", ""), .cols = ends_with(".y")) |>
  select(-ends_with(".x")) |> 
  distinct(cusec, .keep_all=T)
  

```



### Por municipio

```{r}

# Propiedad
compra_total_mun <- compra_total_mun |> 
  mutate(
    PropiedadDifMun = Propiedad21Mun - Compra11Mun)

compra_total_mun %>%
    distinct(PropiedadDifMun, .keep_all = TRUE) |> 
  arrange(desc(PropiedadDifMun)) %>%
    select(PropiedadDifMun, MUN_LITERAL, PROV_LITERAL, CMUN)

# Alquiler
compra_total_mun <- compra_total_mun |> 
  mutate(
    AlquilerDifMun = Alquiler21Mun - Alquiler11Mun)

compra_total_mun %>%
    distinct(AlquilerDifMun, .keep_all = TRUE) |> 
  arrange(desc(AlquilerDifMun)) %>%
    select(AlquilerDifMun, MUN_LITERAL, PROV_LITERAL, CMUN)


# Otro
compra_total_mun <- compra_total_mun |> 
  mutate(
    OtroDifProv = Otro21Mun - Otro11Mun)

compra_total_mun %>%
    distinct(OtroDifProv, .keep_all = TRUE) |> 
  arrange(desc(OtroDifProv)) %>%
    select(OtroDifProv, MUN_LITERAL, PROV_LITERAL, CMUN)



```

### Por provincia

```{r}
#  Propiedad
compra_total_mun <- compra_total_mun |>
  group_by(CPRO) |> 
  mutate(
    PropiedadDifProv = Propiedad21Prov - Compra11Prov) |> 
  ungroup()

compra_total_mun %>%
    distinct(PropiedadDifProv, .keep_all = TRUE) |> 
  arrange(desc(PropiedadDifProv)) %>%
    select(PropiedadDifProv, MUN_LITERAL, PROV_LITERAL, CMUN)

# Alquiler
compra_total_mun <- compra_total_mun |>
  group_by(CPRO) |> 
  mutate(
    AlquilerDifProv = Alquiler21Prov - Alquiler11Prov) |> 
  ungroup()

compra_total_mun %>%
    distinct(AlquilerDifProv, .keep_all = TRUE) |> 
  arrange(desc(AlquilerDifProv)) %>%
    select(AlquilerDifProv, MUN_LITERAL, PROV_LITERAL, CMUN)


# Otro
compra_total_mun <- compra_total_mun |>
  group_by(CPRO) |> 
  mutate(
    OtroDifProv = Otro21Prov - Otro11Prov) |> 
  ungroup()

compra_total_mun %>%
    distinct(OtroDifProv, .keep_all = TRUE) |> 
  arrange(desc(OtroDifProv)) %>%
    select(OtroDifProv, MUN_LITERAL, PROV_LITERAL, CMUN)
```



analizar los municinipios..

Hacer el analisis de componentes pero con las varibales que hablamos y con este perfil de solo compra (?)


